{"version":3,"sources":["Modal.js","LandingPage.js","firebase.js","CurrentList.js","UserArea.js","CompletedLists.js","GamePage.js","App.js","serviceWorker.js","index.js","assets/boffoLogo.svg"],"names":["modal","props","react_default","a","createElement","className","style","transform","show","opacity","onClick","close","class","LandingPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openModalHandler","setState","isShowing","closeModalHandler","state","src_Modal","src","boffoLogo","alt","htmlFor","type","placeholder","name","onChange","handleChange","value","userName","id","required","duplicateError","nothingError","Link","to","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","CurrentList","onSortEnd","_ref","oldIndex","newIndex","_ref2","items","arrayMove","handleDelete","key","database","ref","child","remove","handleSubmit","title","swal","text","icon","button","dangerMode","dbRef","console","log","itemsObject","objectSpread","userObject","list","push","confirmed","prevProps","chosenMovies","length","_this2","react","SortableList","SortableContainer","_ref3","map","index","SortableItem","firebaseKey","SortableElement","_ref4","UserArea","CompletedLists","buttons","then","willDelete","newStateAllTheMovieInfo","keys","on","response","dataFromFirebase","val","userList","_this3","defineProperty","user","movie","apiUrl","GamePage","fetchData","asyncToGenerator","regenerator_default","mark","_callee","year","wrap","_context","prev","next","axios","method","url","dataResponse","paramsSerializer","params","Qs","stringify","arrayFormat","reqUrl","api_key","format","language","primary_release_date.gte","concat","primary_release_date.lte","region","page","sort_by","proxyHeaders","some_header","xmlToJson","results","data","stop","handleYear","event","preventDefault","target","addCurrentMovie","_callee2","numberOfMovies","canAddMovies","duplicatedMovie","_context2","forEach","clickedMovie","moviesFromFirebase","getMoviesBack","_x","apply","arguments","displayList","prevState","filter","poster_path","src_UserArea_0","src_CurrentList_0","App","once","firebaseData","BrowserRouter","Route","exact","path","render","src_LandingPage_0","src_GamePage_0","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8f17cba5.chunk.js","sourcesContent":["import React from 'react';\nimport './Modal.css';\n\nconst modal = (props) => {\n    return (\n        <div>\n            <div className=\"modalWrapper\"\n                style={{\n                    transform: props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                <div className=\"modalHeader\">\n                    <h3>How to play</h3>\n                    <span className=\"closeModalBtn\" onClick={props.close}>\n                        <i class=\"fas fa-times\"></i>\n                        <span className=\"visuallyHidden\">Close Modal</span>\n                    </span>\n                </div>\n                <div className=\"modalBody\">\n                    <p>Predict the top ten highest grossing summer blockbusters! Compete against your friends.</p>\n                    <ol>\n                        <li>Select a year to see all the movies released that summer</li>\n                        <li>Start adding movies to your list, highest grossing at the top, lowest grossing at the bottom</li>\n                        <li>Click and drag movie names to reorder your list</li>\n                        <li>Once you've added 10, lock in your list! Check your friend's lists to see who knows their stuff</li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// Thank you to https://dev.to/achowba/building-a-modal-in-react-15hg for the Modal info which was adapted for our needs!\n\nexport default modal;\n\n\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport boffoLogo from './assets/boffoLogo.svg';\nimport './LandingPage.css'\nimport './Global.css'\nimport Modal from './Modal.js';\n\nclass LandingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isShowing: false\n        }\n    }\n\n    openModalHandler = () => {\n        this.setState({\n            isShowing: true\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"landingPage\">\n                <div>\n                    {this.state.isShowing ?\n                        <div onClick={this.closeModalHandler} className=\"backDrop\"></div> :\n                        null}\n\n                    <Modal\n                        className=\"modal\"\n                        show={this.state.isShowing}\n                        close={this.closeModalHandler}>\n                        Need some more info?\n                        </Modal>\n                </div>\n                <div className=\"contentContainer\">\n                    <div className=\"logo\">\n                        <img src={boffoLogo} className=\"logo\" alt=\"\" />\n                    </div>\n                    <h1 >Welcome to Box Office Boffo!</h1>\n                    <p>Make a list of what you predict will be the top 10 grossing summer blockbusters and see how you match up!</p>\n                    {/*link to the gamepage*/}\n                    <label htmlFor=\"name\" className=\"visuallyHidden\">Name</label>\n                    <input className=\"inputName\" type=\"text\" placeholder=\"Give your list a unique name\" htmlFor=\"name\" name=\"name\" onChange={this.props.handleChange} value={this.props.userName} id=\"name\" required />\n                    <p>{this.props.duplicateError}</p>\n                    <p>{this.props.nothingError}</p>\n                    <Link to=\"gamepage\" className={this.props.class}>Play</Link>\n                </div>\n                <footer className=\"landingFooter clearfix\">\n                    <Link to=\"/\" className=\"homeButton\">\n                        <i class=\"fas fa-home\"></i>\n                        <p>Home</p>\n                        <span className=\"visuallyHidden\">Home Icon</span>\n                    </Link>\n                    <Link to=\"/completedLists\" className=\"allListsButton homeButton\">\n                        <i class=\"fas fa-list-ul\"></i>\n                        <p>Completed Lists</p>\n                        <span className=\"visuallyHidden\">Completed Lists</span>\n                    </Link>\n                    <button className=\"helpButton homeButton\" onClick={this.openModalHandler}>\n                        <i class=\"fas fa-question\"></i>\n                        <p>Help</p>\n                        <span className=\"visuallyHidden\">More info</span>\n                    </button>\n\n                </footer>\n            </section>\n        )\n    }\n}\n\nexport default LandingPage;","import firebase from 'firebase';\n\n  var config = {\n    apiKey: \"AIzaSyD1XDdPkKLLE16BSJ_nz2YMgiMDCRw0594\",\n    authDomain: \"auth-test-d2fa2.firebaseapp.com\",\n    databaseURL: \"https://auth-test-d2fa2.firebaseio.com\",\n    projectId: \"auth-test-d2fa2\",\n    storageBucket: \"auth-test-d2fa2.appspot.com\",\n    messagingSenderId: \"194937812413\"\n  };\n  firebase.initializeApp(config);\n\n  export default firebase","import React, { Component, Fragment } from 'react';\nimport firebase from './firebase';\nimport \"./CurrentList.css\";\nimport \"./Global.css\";\nimport swal from 'sweetalert';\nimport {\n\tSortableContainer,\n\tSortableElement,\n\tarrayMove,\n} from 'react-sortable-hoc';\n\n// we using this library (react-sortable-hoc) to allows the user sort the list, the code for SortableList and SortableItem came from https://github.com/clauderic/react-sortable-hoc\nclass CurrentList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tbutton: 'btnContainer',\n\t\t\tconfirmed: false\n\t\t};\n\t}\n\n\tonSortEnd = ({ oldIndex, newIndex }) => {\n\t\tthis.setState(({ items }) => ({\n\t\t\titems: arrayMove(items, oldIndex, newIndex),\n\t\t}));\n\t};\n\n\t// need to figure out how to delete only one movie from the list ie. .child() but for now it is deleting the whole list\n\thandleDelete = (key) => {\n\n\t\tconst dbRef = firebase.database().ref(this.props.userName).child(key);\n\t\tdbRef.remove();\n\t}\n\n\thandleSubmit = (key, title) => {\n\n\t\tswal({\n\t\t\ttitle: \"You've locked in your choices\",\n\t\t\ttext: \"Check the Completed Lists page to compare your predictions!\",\n\t\t\ticon: \"success\",\n\t\t\tbutton: \"Awesome!\",\n\t\t\tdangerMode: true,\n\t\t})\n\n\t\t// const dbRef = firebase.database().ref('LockedLists')\n\t\t// .set({ list: { key: { key }, title: { title } } });\n\t\tconst dbRef = firebase.database().ref('LockedLists');\n\t\tconsole.log(dbRef)\n\t\tconst itemsObject = { ...this.state.items }\n\t\tconst userObject = { userName: this.props.userName, list: itemsObject }\n\t\tdbRef.push(userObject);\n\t\tthis.setState({\n\t\t\tbutton: 'btnHidden',\n\t\t\titems: []\n\t\t})\n\n\t}\n\n\t//it is for checking if the previous props is different from the new props, if it is the length are different it will reset the state\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.chosenMovies.length !== this.props.chosenMovies.length) {\n\t\t\tthis.setState({\n\t\t\t\titems: this.props.chosenMovies\n\t\t\t});\n\t\t}\n\t}\n\n\t// passing handleDelete function to child components\n\trender() {\n\t\treturn (\n\t\t\t<Fragment >\n\t\t\t\t{/* <h3 className=\"currentListTitle\">order your list</h3> */}\n\t\t\t\t<SortableList\n\t\t\t\t\thandleDelete={key => this.handleDelete(key)}\n\t\t\t\t\titems={this.state.items}\n\t\t\t\t\tonSortEnd={this.onSortEnd}\n\t\t\t\t/>\n\t\t\t\t{/* <button className=\"submitList\" onClick={this.handleSubmit}>Submit</button> */}\n\t\t\t\t{this.state.items.length === 10 ?\n\t\t\t\t\t<div className={this.state.button}>\n\t\t\t\t\t\t<button className=\"confirm btn\" onClick={this.handleSubmit}>confirm</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div className=\"btnHidden\">\n\t\t\t\t\t\t<button className=\"confirm btn\" onClick={this.handleSubmit}>confirm</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst SortableList = SortableContainer(({ items, handleDelete }) => {\n\n\treturn (\n\t\t<ol className=\"currentList\">\n\t\t\t{items.map((value, index) => {\n\t\t\t\tconsole.log(value);\n\t\t\t\t// passing handleDelete function and the firebase key to child components\n\t\t\t\treturn <Fragment>\n\t\t\t\t\t<SortableItem handleDelete={(key) => handleDelete(key)} firebaseKey={value.key} key={index} index={index} title={value.title} />\n\t\t\t\t</Fragment>\n\t\t\t}\n\t\t\t)}\n\t\t</ol>\n\t);\n});\n\n\n// the delete button here can now use the handleDelete function and the firebase key that have been passed down\nconst SortableItem = SortableElement(({ title, firebaseKey, handleDelete }) => {\n\tconsole.log(firebaseKey);\n\treturn (\n\t\t<Fragment>\n\t\t\t<div id={firebaseKey} class=\"currentListItem noSelect\">\n\t\t\t\t<li className=\"listNumber\"></li>\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<button className=\"delete\" onClick={() => handleDelete(firebaseKey)}>\n\t\t\t\t\t<i className=\"fas fa-minus-circle delete\"></i>\n\t\t\t\t</button>\n\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n});\n\n// render(<CurrentList />, document.getElementById('root'));\nexport default CurrentList;","import React, { Component } from 'react';\nimport { render } from 'react-dom';\n// import ReactSVG from 'react-svg';\nimport boffoLogo from './assets/boffoLogo.svg'\nimport './UserArea.css';\nimport './Global.css';\n\nclass UserArea extends Component {\n    render() {\n        return (\n            <div className=\"userArea\">\n                <img className=\"boffoLogo clear\" src={boffoLogo} alt=\"\" />\n                <p className=\"user\">List Name: {this.props.userName}</p>\n            </div>\n        )\n    }\n}\n\n// render(<ReactSVG src=\"logo.svg\" />, document.getElementById('root'))\nexport default UserArea;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport firebase from './firebase';\nimport \"./Global.css\";\nimport \"./CompletedLists.css\";\nimport \"./Modal.css\";\nimport swal from 'sweetalert';\nimport Modal from './Modal.js';;\n\nclass CompletedLists extends Component {\n    constructor() {\n        super();\n        this.state = {\n            newStateAllTheMovieInfo: [],\n            keys: []\n        };\n    }\n\n    // we want all the lists people have ever made to be on the page when we get there\n    componentDidMount() {\n\n        // end point that we get the lists from is 'LockedLists'\n        const dbRef = firebase.database().ref('LockedLists');\n\n        dbRef.on('value', response => {\n            const dataFromFirebase = response.val();\n            // making an empty array to store all of our Firebase info in, because it originally comes back to us as an object\n            const newStateAllTheMovieInfo = [];\n\n            //     // for each node in the firebase object, we want to get the userName and that user's list and save them as variables\n            for (let key in dataFromFirebase) {\n                let keys = dataFromFirebase[key];\n                let userName = dataFromFirebase[key].userName;\n                let userList = dataFromFirebase[key].list;\n\n                // we then push that information to the empty array that we set up earlier\n                newStateAllTheMovieInfo.push({\n                    key: key,\n                    userName: userName,\n                    userList: userList\n                })\n            }\n\n            // we then want to set the state to that new array so we can map over it on page load\n            this.setState({\n                newStateAllTheMovieInfo: newStateAllTheMovieInfo\n            })\n        })\n    }\n\n    handleDelete = (key) => {\n\n        const dbRef = firebase.database().ref('LockedLists').child(key);\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this list!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    dbRef.remove();\n                    swal(\"Poof! Your list has been deleted!\", {\n                        icon: \"success\",\n                    });\n                } else {\n                    swal(\"Your list is safe!\");\n                }\n            });\n        // console.log(dbRef);\n    }\n\n    openModalHandler = () => {\n        this.setState({\n            isShowing: true\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n    }\n\n    render() {\n\n        return (\n\n            <div className=\"completedLists\">\n                <div>\n                    {this.state.isShowing ?\n                        <div onClick={this.closeModalHandler} className=\"backDrop\"></div> :\n                        null}\n\n                    <Modal\n                        className=\"modal\"\n                        show={this.state.isShowing}\n                        close={this.closeModalHandler}>\n                        Need some more info?\n                        </Modal>\n                </div>\n                <h2 className=\"completedListsTitle\">Compare your Predictions!</h2>\n                {/* ul of alllll the lists */}\n                <ul className=\"clearfix\" className=\"userLists\">\n                    {\n                        // for each user, print the userName as a title\n                        this.state.newStateAllTheMovieInfo.map((user, index) => {\n                            // console.log(user.keys);\n                            return (\n                                <li key={index} id={user.key} className=\"listBox\">\n                                    <h3 className=\"listName\">{user.userName}</h3>\n                                    <ol className=\"olContainer\">\n                                        {\n                                            // for each user, print all that user's movies\n                                            user.userList.map((movie, index) => {\n                                                return (\n                                                    <li key={index} className=\"moviesList\"><span>{movie.title}</span></li>\n                                                )\n                                            })\n                                        }\n                                    </ol>\n                                    <button className=\"deleteList\" onClick={() => this.handleDelete(user.key)}>Delete</button>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n\n                <footer className=\"landingFooter clearfix\">\n                    <Link to=\"/\" className=\"homeButton\">\n                        <i class=\"fas fa-home\"></i>\n                        <p>Home</p>\n                        <span className=\"visuallyHidden\">Home Icon</span>\n                    </Link>\n                    <Link to=\"/completedLists\" className=\"allListsButton homeButton\">\n                        <i class=\"fas fa-list-ul\"></i>\n                        <p>Completed Lists</p>\n                        <span className=\"visuallyHidden\">Completed Lists</span>\n                    </Link>\n                    <button className=\"helpButton homeButton\" onClick={this.openModalHandler}>\n                        <i class=\"fas fa-question\"></i>\n                        <p>Help</p>\n                        <span className=\"visuallyHidden\">More info</span>\n                    </button>\n                </footer>\n\n            </div>\n        )\n    }\n}\n\nexport default CompletedLists;","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Qs from 'qs';\nimport firebase from 'firebase';\nimport './GamePage.css';\nimport './Global.css';\nimport './CurrentList.css';\nimport CurrentList from './CurrentList.js';\nimport UserArea from './UserArea.js'\nimport ResetConfirm from './ResetConfirm'\nimport CompletedLists from \"./CompletedLists.js\";\nimport Modal from './Modal.js';\nimport swal from 'sweetalert'\n\n\nconst apiUrl = 'https://api.themoviedb.org/3/discover/movie/'\nconst apiKey = '9ce0982a9b86c5a78ad6ab14e214b652'\n\n// GamePage component has a state of year (which is 2019 to start)\nclass GamePage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            year: \"2019\",\n            results: [],\n            clickedMovie: '',\n            chosenMovies: [],\n            displayList: [],\n            class: '',\n            isShowing: false\n        }\n    }\n    // we're making fetchData it's own function that gets the currentYear from GamePage through props. Then fetchData can be called many times depending on situation\n    // used props to get the year from GamePage and saved as variable. Variable is used in search parameters to make that dynamic\n\n    openModalHandler = () => {\n        this.setState({\n            isShowing: true\n        });\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            isShowing: false\n        });\n    }\n\n    // when component mounts, it will fetchData which is with the year 2019 as default\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    // if the component updates (ie, if the currentYear changes), then it will fetchData again\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.year !== prevState.year) {\n            /*  console.log('year', this.state.year, 'prev', prevProps.year, prevState.year) */\n            this.fetchData();\n        }\n    }\n\n    fetchData = async () => {\n        let { year } = this.state;\n        // console.log('fetchData')\n\n        // await axios({\n        //     method: `get`,\n        //     url: apiUrl,\n        //     params: {\n        //         api_key: apiKey,\n        //         language: `en-US`,\n        //         sort_by: `popularity.desc`,\n        //         'primary_release_date.gte': `${year}-05-01`,\n        //         'primary_release_date.lte': `${year}-09-04`,\n        //         region: 'US',\n        //         page: 1,\n        //         sort_by: 'popularity.desc',\n        //         include_video: false,\n        //         include_adult: false,\n        //         page: 1\n        //     }\n        // }).then(response => {\n        //     const results = response.data.results;\n        //     this.setState({\n        //         results: results\n        //     });\n        //     console.log(results);\n        // })\n\n        await axios({\n            method: 'GET',\n            url: 'https://proxy.hackeryou.com',\n            dataResponse: 'json',\n            paramsSerializer: function (params) {\n                return Qs.stringify(params, { arrayFormat: 'brackets' })\n            },\n            params: {\n                reqUrl: apiUrl,\n                params: {\n                    api_key: apiKey,\n                    format: 'json',\n                    language: 'en-US',\n                    'primary_release_date.gte': `${year}-05-01`,\n                    'primary_release_date.lte': `${year}-09-04`,\n                    region: 'US',\n                    page: 1,\n                    sort_by: 'revenue.desc',\n                    sort_by: 'popularity.desc'\n                },\n                proxyHeaders: {\n                    'some_header': 'lfkjg'\n                },\n                xmlToJson: false,\n            }\n            // .then() and this.setState() will wait until the axios call is done because it has \"await\" on it\n        }).then(response => {\n            const results = response.data.results;\n            this.setState({ \n                results: results });\n            console.log(results);\n        })\n    }\n\n\n    // handleYear is always looking for the chosen year, so if a new year is chosen in the dropdown, GamePage will know about it (it's state is updated)\n    handleYear = (event) => {\n        event.preventDefault();\n        this.setState({\n            year: event.target.value\n        })\n    }\n\n    addCurrentMovie = async (event) => {\n\n        event.preventDefault();\n\n        let numberOfMovies = this.state.chosenMovies.length;\n\n        const canAddMovies = numberOfMovies < 10;\n\n        console.log(this.state.chosenMovies)\n\n        let duplicatedMovie = false\n\n        this.state.chosenMovies.forEach((movie) => {\n\n            if (event.target.value === movie.title) {\n\n                duplicatedMovie = true;\n\n                swal(\"You already have this movie, please choose a new one!\");\n\n            }\n\n        })\n\n        if (canAddMovies === false) {\n\n            swal(\"You already have 10 movies, please submit your list or delete a movie!\");\n\n        }\n\n        console.log(duplicatedMovie)\n\n        if (canAddMovies && duplicatedMovie === false) {\n            const dbRef = firebase.database().ref(this.props.userName);\n            const data = event.target.value;\n            dbRef.push(data);\n            // we get this informations from the click and set the state of that clicked movie\n            await this.setState({\n                clickedMovie: data,\n                class: 'hide'\n            })\n            // console.log('data after clicking', data)\n            //once that state is set (await) we duplicate the chosen movie state and push the clickedMovie to the newMovieArray\n            dbRef.on('value', response => {\n                const moviesFromFirebase = response.val();\n\n                const getMoviesBack = []\n\n                // console.log(moviesFromFirebase)\n\n                // console.log('Key in Data Value', dataVal.key)\n\n                for (let key in moviesFromFirebase) {\n\n                    getMoviesBack.push({\n\n                        key: key,\n\n                        title: moviesFromFirebase[key]\n\n                    });\n\n                }\n\n                // console.log(getMoviesBack);\n\n                this.setState({\n\n                    chosenMovies: getMoviesBack\n\n                })\n\n            })\n        }\n    }\n\n\n\n\n\n    render() {\n        return (\n            <Fragment>\n                <section className=\"gamePage\">\n\n                    <div>\n                        {this.state.isShowing ?\n                            <div onClick={this.closeModalHandler} className=\"backDrop\"></div> :\n                            null}\n\n                        <Modal\n                            className=\"modal\"\n                            show={this.state.isShowing}\n                            close={this.closeModalHandler}>\n                            Need some more info?\n                        </Modal>\n                    </div>\n                    \n                    <p className=\"instructions\">Select a year and start adding movies to your list.</p>\n                    <select className=\"yearDropDown\" onChange={this.handleYear}>\n                        <option value=\"2019\">2019</option>\n                        <option value=\"2018\">2018</option>\n                        <option value=\"2017\">2017</option>\n                        <option value=\"2016\">2016</option>\n                        <option value=\"2015\">2015</option>\n                        <option value=\"2014\">2014</option>\n                        <option value=\"2013\">2013</option>\n                        <option value=\"2012\">2012</option>\n                        <option value=\"2011\">2011</option>\n                        <option value=\"2010\">2010</option>\n                        <option value=\"2009\">2009</option>\n                        <option value=\"2008\">2008</option>\n                    </select>\n                    {/* We pass the state of year to the Axios component to modify the search parameters */}\n\n\n                    <div className=\"movieCatalogue clearfix\">\n                        {this.state.results.filter(movie => {\n                            return movie.poster_path !== null;\n                        }).map(movie => {\n\n                            return (\n                                <div key={movie.id} className=\"movieCatalogueMovie\">\n                                    {/* a link to a URL that doesn't exist yet, but when it does, it will be the ID of the movie I click on */}\n\n                                    <img className=\"movieImage\" src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={`Poster for ${movie.title}`} />\n                                    <div className=\"overlay\">\n                                        <p>{movie.title}</p>\n                                    </div>\n\n                                    <button className=\"addMovie\" value={movie.title} onClick={this.addCurrentMovie} >\n                                        <i className=\"fas fa-plus\"></i>\n                                        <span className=\"visuallyHidden\">Add movie to list</span>\n                                    </button>\n\n                                </div>\n                            )\n                        })\n                        }\n                    </div> {/* end of movieCatalogue div*/}\n                    <footer className=\"gameFooter clearfix\">\n                        <Link to=\"/\" className=\"homeButton\">\n                            <i class=\"fas fa-home\"></i>\n                            <span className=\"visuallyHidden\">Home Icon</span>\n                        </Link>\n                        <Link to=\"/completedLists\" className=\"allListsButton homeButton\">\n                            <i class=\"fas fa-list-ul\"></i>\n                            <span className=\"visuallyHidden\">Completed Lists</span>\n                        </Link>\n                        <button className=\"helpButton homeButton\" onClick={this.openModalHandler}>\n                            <i class=\"fas fa-question\"></i>\n                            <span className=\"visuallyHidden\">More info</span>\n                        </button>\n                    </footer>\n                </section>\n\n                <div className=\"currentListContainer\">\n                    <UserArea className=\"float\" userName={this.props.userName} />\n                    <CurrentList chosenMovies={this.state.chosenMovies} userName={this.props.userName} className=\"float\" />\n                </div>\n            </Fragment>\n        )\n    }\n}\nexport default GamePage;\n//user click on a movie to add to his list\n//find a way to limit to 10 movies choices for each list\n//send error message \"you already choose 10 MOVIES\"","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LandingPage from './LandingPage.js';\nimport GamePage from './GamePage.js';\nimport CompletedLists from './CompletedLists.js';\n\nimport \"./Global.css\";\nimport firebase from './firebase.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      duplicateError: '',\n      nothingError: '',\n      class: 'hide'\n    }\n  }\n\n  // this function will detect when something is being typed in text input and when a change is made, set it in state. it is sent to LandingPage.js below to be used on the user's name input\n  handleChange = (event) => {\n    this.setState({\n      userName: event.target.value\n    })\n\n    if (this.state.userName === '') {\n      this.setState({\n        nothingError: 'You must give your list a name',\n        duplicateError: '',\n        class: 'hide'\n      })\n    }\n\n    if (this.state.userName !== '') {\n      const dbRef = firebase.database().ref('LockedLists');\n\n      dbRef.once('value').then(response => {\n        let firebaseData = response.val();\n        let duplicate = false;\n\n        for (let key in firebaseData) {\n          if (this.state.userName === firebaseData[key].userName) {\n            //alert user if the list name already exists\n            duplicate = true;\n\n            this.setState({\n              duplicateError: 'That name is already taken, pick a new name',\n              nothingError: null,\n              class: 'hide'\n            })\n          } else if (this.state.userName !== '' && this.state.userName !== firebaseData[key].userName) {\n            duplicate = false;\n\n            this.setState({\n              duplicateError: null,\n              nothingError: null,\n              class: 'startButton'\n            })\n          }\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          {/* URL path to go to the landing page. This route is also sending the handleChange method and the userName state to the LandingPage component*/}\n          <Route exact path='/' render={() => {\n            return <LandingPage handleChange={this.handleChange} class={this.state.class} nothingError={this.state.nothingError} duplicateError={this.state.duplicateError} userName={this.state.userName} />\n          }\n          } />\n          {/* URL path to go to the game page. This route is also sending the userName state to the GamePage component*/}\n          <Route path='/gamepage' render={() => {\n            return <GamePage userName={this.state.userName} />\n          }\n          } />\n          <Route path='/completedlists' component={CompletedLists} />\n          {/* <Route path='/help' component={HelpModal} /> */}\n        </div>\n      </Router>\n\n    )\n  }\n}\n\nexport default App;\n// render(<SortableComponent />, document.getElementById('root'));\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/boffoLogo.ac7b1acc.svg\";"],"sourceRoot":""}